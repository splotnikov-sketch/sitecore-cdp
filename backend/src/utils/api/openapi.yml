openapi: 3.0.3
info:
  title: Sitecore CDP Playground API
  description: Sitecore CDP Playground API
  termsOfService: http://swagger.io/terms/
  contact:
    email: splotnikov@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: /api/v1
  - url: http://localhost:3010/api/v1
    description: local
  - url: https://businesses-production-b978.up.railway.app/api/v1
    description: cloud

paths:
  /user:
    post:
      summary: Create User
      tags:
        - user
      operationId: createUser
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - userId
                properties:
                  userId:
                    type: string
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
  /user/review:
    post:
      summary: Create user review
      tags:
        - user
      operationId: addReview
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - externalId
                - content
              properties:
                externalId:
                  type: string
                content:
                  type: string
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - reviewId
                properties:
                  reviewId:
                    type: string
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get the list of user reviews
      tags:
        - user
      operationId: getReviews
      security:
        - auth: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /login:
    post:
      summary: Login
      tags:
        - user
      operationId: login
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Success
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              required: true
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - userId
                properties:
                  userId:
                    type: string
                  token:
                    type: string
                    format: '^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+/=]*$'
        404:
          description: Invalid Login/Password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /location/search:
    post:
      summary: Location search
      tags:
        - location
      operationId: locationSearch
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - term
              properties:
                term:
                  type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponse'
        404:
          description: Location not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/browser/id:
    get:
      description: Returns browser id
      tags:
        - cdp
      operationId: getBrowserId
      security:
        - apiKey: []
      responses:
        200:
          description: Browser id
          content:
            application/json:
              schema:
                type: object
                properties:
                  browser_id:
                    type: string
                    description: CDP browser id.
                    example: 'd37ccbb9-5851-462b-b410-ca25011dbb45'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/event/identity:
    post:
      description: Create Identity event
      tags:
        - cdp
      operationId: createIdentityEvent
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                browser_id:
                  type: string
                page:
                  type: string
                platform:
                  type: string
                  nullable: true
                device:
                  type: string
                  nullable: true
                currency:
                  type: string
                  nullable: true
                language:
                  type: string
                  nullable: true
                ext:
                  type: object
                  nullable: true
      responses:
        200:
          description: Event id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/event/view:
    post:
      description: Create View event
      tags:
        - cdp
      operationId: createViewEvent
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                browser_id:
                  type: string
                page:
                  type: string
                platform:
                  type: string
                  nullable: true
                device:
                  type: string
                  nullable: true
                currency:
                  type: string
                  nullable: true
                language:
                  type: string
                  nullable: true
                ext:
                  type: object
                  nullable: true
      responses:
        200:
          description: Event id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/event/search:
    post:
      description: Create Search event
      tags:
        - cdp
      operationId: createSearchEvent
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                browser_id:
                  type: string
                page:
                  type: string
                platform:
                  type: string
                  nullable: true
                device:
                  type: string
                  nullable: true
                lat:
                  description: latitude
                  type: number
                  format: double
                  minimum: -90
                  maximum: 90
                  nullable: true
                lon:
                  description: longitude
                  type: number
                  format: double
                  minimum: -180
                  maximum: 180
                  nullable: true
                cityState:
                  type: string
                  nullable: true
                term:
                  type: string
                  nullable: true
                currency:
                  type: string
                  nullable: true
                language:
                  type: string
                  nullable: true
                ext:
                  type: object
                  nullable: true
      responses:
        200:
          description: Event id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/event/review:
    post:
      description: Create Review event
      tags:
        - cdp
      operationId: createReviewEvent
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channel
                - browser_id
                - externalId
                - categories
                - email
              properties:
                channel:
                  type: string
                browser_id:
                  type: string
                externalId:
                  type: string
                categories:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        200:
          description: Event id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/session/kill:
    post:
      description: Kill session
      tags:
        - cdp
      operationId: killSession
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                browser_id:
                  type: string
                channel:
                  type: string
                currency:
                  type: string
                  nullable: true
                language:
                  type: string
                  nullable: true
      responses:
        200:
          description: Event id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        500:
          $ref: '#/components/responses/ServerError'
  /cdp/offers:
    post:
      description: Retrieve the list of offers
      tags:
        - cdp
      operationId: getOffers
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                currency:
                  type: string
                  nullable: true
                language:
                  type: string
                  nullable: true
      responses:
        200:
          description: A list of offers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer'
        500:
          $ref: '#/components/responses/ServerError'
  /category/preferred:
    post:
      description: Returns preferred category based on terms
      tags:
        - category
      operationId: getPreferredCategory
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                terms:
                  type: array
                  items:
                    $ref: '#/components/schemas/SearchTerm'
      responses:
        200:
          description: Preferred category
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
  /business/search:
    post:
      description: Search business by a term
      tags:
        - business
      operationId: businessSearch
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                longitude:
                  type: number
                  format: double
                latitude:
                  type: number
                  format: double
                term:
                  type: string
                  nullable: true
                offset:
                  type: integer
                  nullable: true
                limit:
                  type: integer
                  nullable: true
      responses:
        200:
          description: A list of businesses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
  /business/{id}:
    get:
      description: Get business by id
      tags:
        - business
      operationId: getBusinessById
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          description: Id of business to return
          required: true
          schema:
            type: string
      responses:
        200:
          description: Business
          content:
            application/json:
              schema:
                type: object
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailResponse'
components:
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LocationResponse:
      type: object
      properties:
        city:
          type: string
        county:
          type: string
        state:
          type: string
        postcode:
          type: string
        country:
          type: string
        country_code:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        state_code:
          type: string
        formatted:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
    CreateEventResponse:
      type: object
      properties:
        ref:
          type: string
          description: Id of created event
          example: 'd37ccbb9-5851-462b-b410-ca25011dbb45'
    Offer:
      type: object
      properties:
        title:
          type: string
          description: offer title
        text:
          type: string
          description: offer details
    Review:
      type: object
      properties:
        id:
          type: string
          description: review id
        externalId:
          type: string
          description: id of external object user posted review for
        content:
          type: string
          description: content of review
        createdAt:
          type: string
          format: date-time
          description: the date and time the review was created
    SearchTerm:
      type: object
      properties:
        term:
          type: string
        num:
          type: integer
    Business:
      type: object
      properties:
        id:
          type: string
        index:
          type: string
        name:
          type: string
        distance_meters:
          type: number
          format: double
        distance_km:
          type: number
          format: double
        distance_miles:
          type: number
          format: double
        location:
          type: object
          properties:
            zip_code:
              type: string
            state:
              type: string
            city:
              type: string
            address1:
              type: string
            address2:
              type: string
        url:
          type: string
        image_url:
          type: string
        review_count:
          type: integer
        price:
          type: string
        rating:
          type: number
          format: double
        categories:
          type: array
          items:
            type: object
            properties:
              alias:
                type: string
              title:
                type: string
        transactions:
          type: array
          items:
            type: string
        phone:
          type: string
        is_closed:
          type: boolean
    FailResponse:
      type: object
      additionalProperties: false
      required:
        - success
        - error
      properties:
        success:
          type: boolean
        error:
          type: string
  responses:
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FailResponse'
